Project ThemeFlight {
  database_type: 'PostgreSQL'
  note: 'ThemeFlight Database Design'
}

enum theme_status {
  ACTIVATED
  SCHEDULED
  NOT_READY
}

enum trigger_type {
  WEBHOOK
  SCRIPT_TAG
}

enum log_type {
  INVALID_HOOK_DATTA

  ADD_THEME
  EDIT_THEME
  DEL_THEME

  ADD_SCHEDULE
  EDIT_SCHEDULE
  DEL_SCHEDULE

  ADD_SUBSCRIBE
  EDIT_SUBSCRIBE
  DEL_SUBSCRIBE

  ADD_SUPPORT
  EDIT_SUPPORT
  DEL_SUPPORT

  ADD_WEBHOOK
  EDIT_WEBHOOK
  DEL_WEBHOOK

  ADD_SCRIPT_TAG
  EDIT_SCRIPT_TAG
  DEL_SCRIPT_TAG
}

enum subscribe_keycode {
  ANNUAL
  QUARTERLY
  MONTHLY
}

enum subscribe_status {
  FREE_TRIAL
  SUCCESS
  CANCELED
  EXPIRED
  REFUND
}

Table shops {
  id int [pk, increment]
  name varchar
  access_token varchar
  is_subscribed boolean [default: false]
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
}

Table themes {
  id int [pk, increment]
  shop_id int [not null]
  name varchar
  desc varchar
  tags varchar
  status theme_status
  api_theme_id varchar
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
}

Ref: shops.id < themes.shop_id

Table schedules {
  id int [pk, increment]
  theme_id int [not null]
  start_at timestamp [not null]
  end_at timestamp
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
}

Ref: themes.id < schedules.theme_id

Table triggers {
  id int [pk, increment]
  shop_id int [not null]
  api_trigger_id varchar
  type trigger_type
  metadata "jsonb"
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
}

Ref: shops.id < triggers.shop_id

Table logs {
  id int [pk, increment]
  type log_type
  shop_id int
  victim_id int
  metadata "jsonb"
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
}

Ref: shops.id < logs.shop_id

Table subscribe_types {
  id int [pk, increment]
  name varchar
  keycode subscribe_keycode
  price int
  base_price int
  recommended boolean
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
}

Table subscribes {
  id int [pk, increment]
  shop_id int [not null]
  type_id int [not null]
  status subscribe_status
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
}

Ref: shops.id < subscribes.shop_id
Ref: subscribe_types.id < subscribes.type_id
